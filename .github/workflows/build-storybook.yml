name: build-storybook

on:
  push:
    branches:
      - develop
      - master

jobs:
  # test-storybook:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - if: github.ref != 'refs/heads/master'
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0 # Required to retrieve git history
  #     - uses: chromaui/action@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  build-storybook:
    runs-on: ubuntu-latest
    # needs: test-storybook
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Cache Node - npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-cache-

      - name: yarn install
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install

      - name: yarn test
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: test --passWithNoTests
        env:
          CI: true

      - name: Build Storybook
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: build-storybook

      - if: github.ref == 'refs/heads/master'
        name: Publish Storybook
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: storybook-files
          path: storybook-static

  deploy-storybook:
    runs-on: ubuntu-latest
    needs: build-storybook
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: storybook-files
          path: storybook-static

      - if: github.ref == 'refs/heads/master'
        name: Clear master folders
        run: |
          shopt -s extglob
          rm -rf -- !(develop|storybook-static|CNAME)
          mv storybook-static/* .

      - if: github.ref != 'refs/heads/master'
        name: Clear ${GITHUB_REF##*/} folders
        run: |
          rm -rf ${GITHUB_REF##*/}
          mv storybook-static ${GITHUB_REF##*/}

      - name: Commit updates
        run: |
          git add .
          git status
          git diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0
          git commit -m "Deploy storybook for ${GITHUB_REF##*/}."
          git pull --no-edit --quiet
          git push origin gh-pages
        env:
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}
